<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title type="text">博客园_obullxl</title><subtitle type="text">Java，Python，Android，追逐自己所喜欢的！</subtitle><id>uuid:74b0518e-b0b8-45a5-8060-8d8ec6c97c2a;id=8162</id><updated>2013-09-05T01:32:43Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><generator>feed.cnblogs.com</generator><entry><id>http://www.cnblogs.com/obullxl/archive/2012/06/11/jdbc-mysql-load-data-infile.html</id><title type="text">MySQL使用JDBC Load Data InFile导入数据注意事项 - 老牛啊</title><summary type="text">使用JDBC Connection的命令 load data infile往MySQL中导入文件，需要注意的事项。</summary><published>2012-06-11T09:00:00Z</published><updated>2012-06-11T09:00:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2012/06/11/jdbc-mysql-load-data-infile.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2012/06/11/jdbc-mysql-load-data-infile.html" /><content type="html">&lt;p&gt;今天测试JDBC Connection使用Load Data InFile往数据表中导入数据，Java程序如下：&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;public class LoadDataTest {&lt;br/&gt;&lt;br/&gt;    @Test&lt;br/&gt;    public void test_loadData() throws Exception {&lt;br/&gt;        Connection conn = null;&lt;br/&gt;        Statement stmt = null;&lt;br/&gt;        try {&lt;br/&gt;            conn = DBUtils.fetchConnection();&lt;br/&gt;            stmt = conn.createStatement();&lt;br/&gt;&lt;br/&gt;            String sql = "load data infile 'c:/test_key_value.txt' into table test_key_value fields terminated by ',' enclosed by '\'' lines terminated by '\r\n'";&lt;br/&gt;            boolean result = stmt.execute(sql);&lt;br/&gt;&lt;br/&gt;            System.out.println("Load执行结果：" + result);&lt;br/&gt;        } finally {&lt;br/&gt;            DBUtils.freeConnection();&lt;br/&gt;            DBUtils.closeQuietly(stmt);&lt;br/&gt;            DBUtils.closeDataSource();&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/div&gt;&lt;p&gt;可是一直报MySQL语法异常：&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''' at line 2&lt;br/&gt;at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&lt;br/&gt;at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)&lt;br/&gt;at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)&lt;br/&gt;at java.lang.reflect.Constructor.newInstance(Constructor.java:513)&lt;br/&gt;at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)&lt;br/&gt;at com.mysql.jdbc.Util.getInstance(Util.java:386)&lt;br/&gt;at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)&lt;br/&gt;at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3597)&lt;br/&gt;at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3529)&lt;br/&gt;at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1990)&lt;br/&gt;at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2151)&lt;br/&gt;at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2619)&lt;br/&gt;at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2569)&lt;br/&gt;at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:813)&lt;br/&gt;at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:656)&lt;br/&gt;at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)&lt;br/&gt;at org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)&lt;br/&gt;at com.alipay.mbill.loaddata.LoadDataTest.test_loadData(LoadDataTest.java:31)&lt;br/&gt;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)&lt;br/&gt;at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)&lt;br/&gt;at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)&lt;br/&gt;at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)&lt;br/&gt;at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)&lt;br/&gt;at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)&lt;br/&gt;at org.junit.internal.runners.JUnit4ClassRunner.invokeTestMethod(JUnit4ClassRunner.java:88)&lt;br/&gt;at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)&lt;br/&gt;at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)&lt;br/&gt;at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)&lt;br/&gt;at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)&lt;br/&gt;at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)&lt;br/&gt;at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)&lt;br/&gt;at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&lt;br/&gt;at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&lt;br/&gt;at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&lt;br/&gt;at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&lt;br/&gt;&lt;/div&gt;&lt;p&gt;可是把这条语句拿到MySQL命令行中，却是对的，在网上找了一大圈，也没有找到结果，于是自己Debug调试一下，发现SQL的内容如下：&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;load data infile 'c:/test_key_value.txt' into table test_key_value fields terminated by ',' enclosed by ''' lines terminated by '&lt;br/&gt;'&lt;br/&gt;&lt;/div&gt;&lt;p&gt;我X，竟然SQL内容都断开了，那当然不行了，这完全跟在命令行的SQL内容不一样啊，顿时豁然开朗，原来在Java的SQL中少加了转义字符，把SQL改成如下，便可测试通过：&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;String sql = "load data infile 'c:/test_key_value.txt' into table test_key_value fields terminated by ',' enclosed by '\\'' lines terminated by '\\r\\n'";&lt;br/&gt;&lt;/div&gt;&lt;p&gt;这样，最终的SQL内容才为：load data infile 'c:/test_key_value.txt' into table test_key_value fields terminated by ',' enclosed by '\'' lines terminated by '\r\n'&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;附上数据表结构和测试文件内容：&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;CREATE TABLE `test_key_value` (&lt;br/&gt;  `id` bigint(20) NOT NULL AUTO_INCREMENT,&lt;br/&gt;  `key` varchar(32) CHARACTER SET latin1 DEFAULT NULL,&lt;br/&gt;  `value` varchar(128) CHARACTER SET latin1 DEFAULT NULL,&lt;br/&gt;  `gmt_create` timestamp NULL DEFAULT NULL,&lt;br/&gt;  `gmt_modify` timestamp NULL DEFAULT NULL,&lt;br/&gt;  PRIMARY KEY (`id`)&lt;br/&gt;) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=gbk&lt;br/&gt;&lt;/div&gt;&lt;p&gt;测试文件内容：&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;'1','KEY01','Value01','2012-06-08 15:50:30','2012-06-08 16:50:30'&lt;br/&gt;'2','KEY02','Value02','2012-06-08 15:50:30','2012-06-08 16:50:30'&lt;br/&gt;'3','KEY03','Value03','2012-06-08 15:50:30','2012-06-08 16:50:30'&lt;br/&gt;'4','KEY04','Value04','2012-06-08 15:50:30','2012-06-08 16:50:30'&lt;br/&gt;'5','KEY05','Value05','2012-06-08 15:50:30','2012-06-08 16:50:30'&lt;br/&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;根据MySQL的官方文档，继续完善测试用例，可以Load部分数据：&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;public class LoadDataTest {&lt;br/&gt;&lt;br/&gt;    /**&lt;br/&gt;     * 完全导入，包括自增字段&lt;br/&gt;     */&lt;br/&gt;    @Test&lt;br/&gt;    public void test_loadData_ALL() throws Exception {&lt;br/&gt;        Connection conn = null;&lt;br/&gt;        Statement stmt = null;&lt;br/&gt;        try {&lt;br/&gt;            conn = DBUtils.fetchConnection();&lt;br/&gt;            stmt = conn.createStatement();&lt;br/&gt;&lt;br/&gt;            String sql = "load data infile 'c:/test_key_value.txt' replace into table test_key_value character set GBK fields terminated by ',' enclosed by '\\'' lines terminated by '\\r\\n'";&lt;br/&gt;            boolean result = stmt.execute(sql);&lt;br/&gt;&lt;br/&gt;            System.out.println("Load执行结果：" + result);&lt;br/&gt;        } finally {&lt;br/&gt;            DBUtils.freeConnection();&lt;br/&gt;            DBUtils.closeQuietly(stmt);&lt;br/&gt;            DBUtils.closeDataSource();&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    /**&lt;br/&gt;     * 部分导入，自增字段自动加1&lt;br/&gt;     */&lt;br/&gt;    @Test&lt;br/&gt;    public void test_loadData_PART() throws Exception {&lt;br/&gt;        Connection conn = null;&lt;br/&gt;        Statement stmt = null;&lt;br/&gt;        try {&lt;br/&gt;            conn = DBUtils.fetchConnection();&lt;br/&gt;            stmt = conn.createStatement();&lt;br/&gt;&lt;br/&gt;            String sql = "load data infile 'c:/test_key_value_02.txt' replace into table test_key_value character set GBK fields terminated by ',' enclosed by '\\'' lines terminated by '\\r\\n' (`key`,`value`,`gmt_create`,`gmt_modify`)";&lt;br/&gt;            boolean result = stmt.execute(sql);&lt;br/&gt;&lt;br/&gt;            System.out.println("Load执行结果：" + result);&lt;br/&gt;        } finally {&lt;br/&gt;            DBUtils.freeConnection();&lt;br/&gt;            DBUtils.closeQuietly(stmt);&lt;br/&gt;            DBUtils.closeDataSource();&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;img src="http://counter.cnblogs.com/blog/rss/2545311" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2012/06/11/jdbc-mysql-load-data-infile.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2012/06/11/jdbc-mysql-load-data-infile.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/obullxl/archive/2012/05/11/jeecms-maven-build.html</id><title type="text">JeeCMS 2012 Maven构建+Eclipse完整开发版 - 老牛啊</title><summary type="text">JeeCMS进行Maven构建，增加了内嵌服务器，可以通过Eclipse启动，把源码和其它资源整合起来，在一个工程中操作即可。</summary><published>2012-05-11T01:23:00Z</published><updated>2012-05-11T01:23:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2012/05/11/jeecms-maven-build.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2012/05/11/jeecms-maven-build.html" /><content type="html">&lt;p&gt;首先非常感谢JeeCMS能够开源，这种精神值得任何人学习；我看过不少的国内开源系统源代码，JeeCMS是我见过的写得最规范的，特别是注释。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;下载源代码，看了几个类的注释后，我的第一想法就是进行第二次开发，并且与大家共享开源，可惜的是，JeeCMS引用的第三方JAR包都没有源代码，且第三主Jar包直接放在WEB-INF/lib目录下，开发的时候文件比较大；&amp;nbsp;&lt;br /&gt;于是乎，我把JeeCMS进行Maven化了，并且加了Jetty内嵌服务器，这样可以通过Eclipse启动服务器，可以断点调试，非常的方便。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;使用方法：&amp;nbsp;&lt;br /&gt;1、安装Maven：http://maven.apache.org/download.html，并把%MVN_HOME%/bin加到%PATH%变量中，这样可以使用mvn命令了；&amp;nbsp;&lt;br /&gt;2、执行工程下eclipse.bat命令，这样会生成eclipse工程；&amp;nbsp;&lt;br /&gt;3、导入到eclipse中，这样源代码和其它资源都有了；&amp;nbsp;&lt;br /&gt;4、执行com.jeecms.cms.JettyWebStarter类，它是个具有main方法的类，这样就启动系统了；&amp;nbsp;&lt;br /&gt;5、在浏览器中输入：http://127.0.0.1/jeecms就可看结果了，哈哈。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;修改点：&amp;nbsp;&lt;br /&gt;1、Maven化，增加了内嵌服务器，可以通过Eclipse启动；&amp;nbsp;&lt;br /&gt;2、Jar升级；&amp;nbsp;&lt;br /&gt;3、把源码和其它资源整合起来，在一个工程中操作即可。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;欢迎与各位一起交流，QQ：303630027&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Maven构建源代码：&lt;a class="snap_shots" href="http://bbs.jeecms.com/u/cms/www/201205/10203136b5vq.zip" rel="nofollow" target="_new"&gt;jeecms-2012-Maven开发版.zip&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&lt;img src="http://counter.cnblogs.com/blog/rss/2495403" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2012/05/11/jeecms-maven-build.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2012/05/11/jeecms-maven-build.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/obullxl/archive/2011/07/10/spring-quartz-cron-integration.html</id><title type="text">Spring集成Quartz定时任务框架介绍和Cron表达式详解 - 老牛啊</title><summary type="text">在JavaEE系统中，我们会经常用到定时任务，比如每天凌晨生成前天报表，每一小时生成汇总数据等等。我们可以使用java.util.Timer结合java.util.TimerTask来完成这项工作，但时调度控制非常不方便，并且我们需要大量的代码。使用Quartz框架无疑是非常好的选择，并且与Spring可以非常方便的集成，下面介绍它们集成方法和Cron表达式的详细介绍。一、增加所依赖的JAR包1、增加Spring的Maven依赖&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId</summary><published>2011-07-10T07:10:00Z</published><updated>2011-07-10T07:10:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2011/07/10/spring-quartz-cron-integration.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2011/07/10/spring-quartz-cron-integration.html" /><content type="html">&lt;p&gt;在JavaEE系统中，我们会经常用到定时任务，比如每天凌晨生成前天报表，每一小时生成汇总数据等等。&lt;br /&gt;我们可以使用java.util.Timer结合java.util.TimerTask来完成这项工作，但时调度控制非常不方便，并且我们需要大量的代码。&lt;br /&gt;使用Quartz框架无疑是非常好的选择，并且与Spring可以非常方便的集成，下面介绍它们集成方法和Cron表达式的详细介绍。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一、增加所依赖的JAR包&lt;/strong&gt;&lt;br /&gt;1、增加Spring的Maven依赖&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;dependency&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;groupId&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;org.springframework&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;groupId&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;spring-webmvc&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;version&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;3.0.5.RELEASE&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;version&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;dependency&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;2、增加Quartz的Maven依赖&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;dependency&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;groupId&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;org.quartz-scheduler&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;groupId&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;quartz&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;version&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;1.8.4&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;version&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;dependency&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;二、增加定时业务逻辑类&lt;/strong&gt;&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;class&lt;/span&gt;&lt;span style="color: #000000;"&gt; ExpireJobTask {&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;/**&lt;/span&gt;&lt;span style="color: #008000;"&gt; Logger &lt;/span&gt;&lt;span style="color: #008000;"&gt;*/&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;private&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;static&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;final&lt;/span&gt;&lt;span style="color: #000000;"&gt; Logger logger &lt;/span&gt;&lt;span style="color: #000000;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; LoggerFactory.getLogger(ExpireJobTask.&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;class&lt;/span&gt;&lt;span style="color: #000000;"&gt;);&lt;br /&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;/**&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;     * 业务逻辑处理&lt;br /&gt;     &lt;/span&gt;&lt;span style="color: #008000;"&gt;*/&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; doBiz() {&lt;br /&gt;  &lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt; 执行业务逻辑&lt;br /&gt;  &lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt; ........&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;    }&lt;br /&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;ExpireJobTask业务逻辑类与一般普通的类没有任务区别，它定义的doBiz方法即为调度业务方法。&lt;p&gt;&lt;strong&gt;三、增加Spring配置&lt;/strong&gt;&lt;br /&gt;1、增加一个线程池&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; 线程执行器配置，用于任务注册 &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;id&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="executor"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; class&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="corePoolSize"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="10"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="maxPoolSize"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="100"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="queueCapacity"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="500"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;2、定义业务逻辑处理类&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; 业务对象 &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;id&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="bizObject"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; class&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="com.aboy.potak.common.toolkit.scheduling.ExpireJobTask"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;3、增加调度业务逻辑&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; 调度业务 &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;id&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="jobDetail"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; class&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="targetObject"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; ref&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="bizObject"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="targetMethod"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="doBiz"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;上面的配置中，我们以bizObject.doBiz方法为将要调度的业务执行逻辑。&lt;br /&gt;4、增加调度触发器&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;id&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="cronTrigger"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; class&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="org.springframework.scheduling.quartz.CronTriggerBean"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="jobDetail"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; ref&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="jobDetail"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="cronExpression"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="10 0/1 * * * ?"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;Cron表达式&amp;ldquo;10 */1 * * * ?&amp;rdquo;意为：从10秒开始，每1分钟执行一次。&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;id&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="taskTrigger"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; class&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="org.springframework.scheduling.quartz.SimpleTriggerBean"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="jobDetail"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; ref&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="jobDetail"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="startDelay"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="10000"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="repeatInterval"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="60000"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;该调度表示，延迟10秒启动，然后每隔1分钟执行一次。&lt;br /&gt;5、增加调度&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; 设置调度 &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;class&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="org.springframework.scheduling.quartz.SchedulerFactoryBean"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="triggers"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;list&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;   &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;ref &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;bean&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="cronTrigger"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;list&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;property&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="taskExecutor"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; ref&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="executor"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;triggers属性中，我们可以增加多个触发器。&lt;p&gt;到此，Spring已经与Quartz完美的结合了，我们接下来的工作就是启动系统，开始调度了。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;四、Cron表达式的详细用法&lt;/strong&gt;&lt;br /&gt;字段 允许值 允许的特殊字符 &lt;br /&gt;秒 0-59 , - * / &lt;br /&gt;分 0-59 , - * / &lt;br /&gt;小时 0-23 , - * / &lt;br /&gt;日期 1-31 , - * ? / L W C &lt;br /&gt;月份 1-12 或者 JAN-DEC , - * / &lt;br /&gt;星期 1-7 或者 SUN-SAT , - * ? / L C # &lt;br /&gt;年（可选） 留空, 1970-2099 , - * / &lt;/p&gt;&lt;p&gt;例子：&lt;br /&gt;0/5 * * * * ? ： 每5秒执行一次&lt;/p&gt;&lt;p&gt;&amp;ldquo;*&amp;rdquo;字符被用来指定所有的值。如："*"在分钟的字段域里表示&amp;ldquo;每分钟&amp;rdquo;。 &lt;br /&gt;&amp;ldquo;?&amp;rdquo;字符只在日期域和星期域中使用。它被用来指定&amp;ldquo;非明确的值&amp;rdquo;。当你需要通过在这两个域中的一个来指定一些东西的时候，它是有用的。看下面的例子你就会明白。 &lt;br /&gt;月份中的日期和星期中的日期这两个元素时互斥的一起应该通过设置一个问号来表明不想设置那个字段。&lt;/p&gt;&lt;p&gt;&amp;ldquo;-&amp;rdquo;字符被用来指定一个范围。如：&amp;ldquo;10-12&amp;rdquo;在小时域意味着&amp;ldquo;10点、11点、12点&amp;rdquo;。&lt;/p&gt;&lt;p&gt;&amp;ldquo;,&amp;rdquo;字符被用来指定另外的值。如：&amp;ldquo;MON,WED,FRI&amp;rdquo;在星期域里表示&amp;rdquo;星期一、星期三、星期五&amp;rdquo;。&lt;/p&gt;&lt;p&gt;&amp;ldquo;/&amp;rdquo;字符用于指定增量。如：&amp;ldquo;0/15&amp;rdquo;在秒域意思是每分钟的0，15，30和45秒。&amp;ldquo;5/15&amp;rdquo;在分钟域表示每小时的5，20，35和50。符号&amp;ldquo;*&amp;rdquo;在&amp;ldquo;/&amp;rdquo;前面（如：*/10）等价于0在&amp;ldquo;/&amp;rdquo;前面（如：0/10）。记住一条本质：表达式的每个数值域都是一个有最大值和最小值的集合，如：秒域和分钟域的集合是0-59，日期域是1-31，月份域是1-12。字符&amp;ldquo;/&amp;rdquo;可以帮助你在每个字符域中取相应的数值。如：&amp;ldquo;7/6&amp;rdquo;在月份域的时候只有当7月的时候才会触发，并不是表示每个6月。&lt;/p&gt;&lt;p&gt;L是&amp;lsquo;last&amp;rsquo;的省略写法可以表示day-of-month和day-of-week域，但在两个字段中的意思不同，例如day-of-month域中表示一个月的最后一天。如果在day-of-week域表示&amp;lsquo;7&amp;rsquo;或者&amp;lsquo;SAT&amp;rsquo;，如果在day-of-week域中前面加上数字，它表示一个月的最后几天，例如&amp;lsquo;6L&amp;rsquo;就表示一个月的最后一个星期五。&lt;/p&gt;&lt;p&gt;字符&amp;ldquo;W&amp;rdquo;只允许日期域出现。这个字符用于指定日期的最近工作日。例如：如果你在日期域中写 &amp;ldquo;15W&amp;rdquo;，表示：这个月15号最近的工作日。所以，如果15号是周六，则任务会在14号触发。如果15好是周日，则任务会在周一也就是16号触发。如果是在日期域填写&amp;ldquo;1W&amp;rdquo;即使1号是周六，那么任务也只会在下周一，也就是3号触发，&amp;ldquo;W&amp;rdquo;字符指定的最近工作日是不能够跨月份的。字符&amp;ldquo;W&amp;rdquo;只能配合一个单独的数值使用，不能够是一个数字段，如：1-15W是错误的。&lt;/p&gt;&lt;p&gt;&amp;ldquo;L&amp;rdquo;和&amp;ldquo;W&amp;rdquo;可以在日期域中联合使用，LW表示这个月最后一周的工作日。&lt;/p&gt;&lt;p&gt;字符&amp;ldquo;#&amp;rdquo;只允许在星期域中出现。这个字符用于指定本月的某某天。例如：&amp;ldquo;6#3&amp;rdquo;表示本月第三周的星期五（6表示星期五，3表示第三周）。&amp;ldquo;2#1&amp;rdquo;表示本月第一周的星期一。&amp;ldquo;4#5&amp;rdquo;表示第五周的星期三。&lt;/p&gt;&lt;p&gt;字符&amp;ldquo;C&amp;rdquo;允许在日期域和星期域出现。这个字符依靠一个指定的&amp;ldquo;日历&amp;rdquo;。也就是说这个表达式的值依赖于相关的&amp;ldquo;日历&amp;rdquo;的计算结果，如果没有&amp;ldquo;日历&amp;rdquo;关联，则等价于所有包含的&amp;ldquo;日历&amp;rdquo;。如：日期域是&amp;ldquo;5C&amp;rdquo;表示关联&amp;ldquo;日历&amp;rdquo;中第一天，或者这个月开始的第一天的后5天。星期域是&amp;ldquo;1C&amp;rdquo;表示关联&amp;ldquo;日历&amp;rdquo;中第一天，或者星期的第一天的后1天，也就是周日的后一天（周一）。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;五、表达式举例&lt;/strong&gt;&lt;br /&gt;"0 0 12 * * ?" 每天中午12点触发&lt;br /&gt;"0 15 10 ? * *" 每天上午10:15触发&lt;br /&gt;"0 15 10 * * ?" 每天上午10:15触发&lt;br /&gt;"0 15 10 * * ? *" 每天上午10:15触发&lt;br /&gt;"0 15 10 * * ? 2005" 2005年的每天上午10:15触发&lt;br /&gt;"0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发&lt;br /&gt;"0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发&lt;br /&gt;"0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发&lt;br /&gt;"0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发&lt;br /&gt;"0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发&lt;br /&gt;"0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发&lt;br /&gt;"0 15 10 15 * ?" 每月15日上午10:15触发&lt;br /&gt;"0 15 10 L * ?" 每月最后一日的上午10:15触发&lt;br /&gt;"0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发 &lt;br /&gt;"0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发&lt;br /&gt;"0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发&lt;/p&gt;&lt;p&gt;------------------------&lt;br /&gt;欢迎大家批评指正:&lt;br /&gt;http://obullxl.iteye.com&lt;br /&gt;http://www.cnblogs.com/obullxl&lt;br /&gt;http://hi.baidu.com/obullxl&lt;br /&gt;-----------------------&lt;/p&gt;&lt;img src="http://counter.cnblogs.com/blog/rss/2102294" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2011/07/10/spring-quartz-cron-integration.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2011/07/10/spring-quartz-cron-integration.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/obullxl/archive/2011/07/05/jms-activemq-persist-mysql.html</id><title type="text">JMS服务器ActiveMQ的初体验并持久化消息到MySQL数据库中 - 老牛啊</title><summary type="text">一、JMS的理解JMS（Java Message Service）是jcp组织02-03年定义了jsr914规范（http://jcp.org/en/jsr/detail?id=914），它定义了消息的格式和消息传递模式；消息包括：消息头，消息扩展属性和消息体，其结构看起来与SOAP非常的相似，但一般情况下，SOAP主要关注远程服务调用，而消息则专注于信息的交换；消息分为：消息生产者，消息服务器和消息消费者。生产者与消费者之间是透明的，生产者在产生消息之后，把消息发送到消息服务器，再由消息服务器发给消费者，因此它们构成了JMS的3点结构；消息服务器再给消费者时，有2种模式：点到点（ptp: p</summary><published>2011-07-05T05:12:00Z</published><updated>2011-07-05T05:12:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2011/07/05/jms-activemq-persist-mysql.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2011/07/05/jms-activemq-persist-mysql.html" /><content type="html">&lt;strong&gt;一、JMS的理解&lt;/strong&gt;&lt;br /&gt;JMS（Java Message Service）是jcp组织02-03年定义了jsr914规范（http://jcp.org/en/jsr/detail?id=914），它定义了消息的格式和消息传递模式；&lt;br /&gt;消息包括：消息头，消息扩展属性和消息体，其结构看起来与SOAP非常的相似，但一般情况下，SOAP主要关注远程服务调用，而消息则专注于信息的交换；&lt;br /&gt;消息分为：消息生产者，消息服务器和消息消费者。生产者与消费者之间是透明的，生产者在产生消息之后，把消息发送到消息服务器，再由消息服务器发给消费者，因此它们构成了JMS的3点结构；&lt;br /&gt;消息服务器再给消费者时，有2种模式：点到点（ptp: point to point）模式和发布/订阅（publish/subscribe）模式；&lt;br /&gt;ptp：即生产者把消息投递到消息服务器后，这条消息只能由某一个消费者使用；&lt;br /&gt;发布/订阅：顾名思义，就是共享消息了，只要愿意，消费者都可以监听消息；&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;二、消息服务器（ActiveMQ）&lt;/strong&gt;&lt;br /&gt;消息服务器在JMS的3点结构中起着重要作用，没有它，生产者的消息不知道如何投递出去，消费者不知道从哪里取得消息，它同样是隔离生产者和消费者的关键部分&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&lt;br /&gt;JMS消息服务器有很多：ActiveMQ、Jboss MQ、Open MQ、RabbitMQ、ZeroMQ等等。&lt;br /&gt;本文介绍的是开源的Java实现的Apache ActiveMQ（http://activemq.apache.org），它的特性在首页就能看到，我就不再介绍了；&lt;br /&gt;&lt;br /&gt;1、下载AMQ：http://activemq.apache.org/download.html，最新版本是5.5.0；&lt;br /&gt;2、解压apache-activemq-5.5.0-bin.zip文件到文件系统（比如D:\ActiveMQ-5.5.0）；&lt;br /&gt;3、执行bin/activemq.bat脚本即可启动AMQ：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt; INFO | ActiveMQ 5.5.0 JMS Message Broker (localhost) is starting&lt;br/&gt; ......&lt;br/&gt; INFO | Listening for connections at: tcp://SHI-AP33382A:61616&lt;br/&gt;&lt;/div&gt;当看到上面的日志输出时，表示AMQ已经启动了；&lt;br /&gt;4、默认情况下，AMQ使用conf/activemq.xml作为配置文件，我们可修改它，然后以 bin/activemq.bat xbean:./conf/my.xml启动AMQ；&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;三、持久化消息（MySQL）&lt;/strong&gt;&lt;br /&gt;因为接下来我们修改AMQ的默认配置文件，所以先备份conf/activemq.xml文件；&lt;br /&gt;1、建立MySQL数据库：要使用MySQL存储消息，必须告诉AMQ数据源：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;/**&lt;br/&gt; * 创建数据库&lt;br/&gt; */&lt;br/&gt;CREATE DATABASE misc DEFAULT CHARSET=UTF8;&lt;br/&gt;&lt;br/&gt;/**&lt;br/&gt; * 创建用户和授权&lt;br/&gt; */&lt;br/&gt;GRANT ALL PRIVILEGES ON misc.* TO 'misc_root'@'%' IDENTIFIED BY 'misc_root_pwd';&lt;br/&gt;GRANT ALL PRIVILEGES ON misc.* TO 'misc_root'@'localhost' IDENTIFIED BY 'misc_root_pwd';&lt;br/&gt;&lt;/div&gt;通过上面的SQL脚本，我们建立了名为misc的数据库，并且把所有权限都赋予了misc_root的用户；&lt;br /&gt;由于AMQ需要在本数据库中建立数据表，因此用户的权限必须具有建表权限；&lt;br /&gt;2、添加MySQL数据源：默认情况下，AMQ使用KahaDB存储（我对KahaDB不了解），注释到KahaDB的配置方式，改为MySQL的：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;&amp;lt;persistenceAdapter&amp;gt;&lt;br /&gt;    &amp;lt;kahaDB directory="${activemq.base}/data/kahadb"/&amp;gt;&lt;br /&gt;&amp;lt;/persistenceAdapter&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;persistenceAdapter&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;jdbcPersistenceAdapter &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;dataSource&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="#MySQL-DS"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;persistenceAdapter&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;该配置表示，我们将要使用一个叫做&amp;ldquo;MySQL-DS&amp;rdquo;的JDBC数据源；&lt;br /&gt;3、配置MySQL数据源：在&amp;lt;/broker&amp;gt;节点后面，增加MySQL数据源配置：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; MySQL DataSource &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;id&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="MySQL-DS"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; class&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="org.apache.commons.dbcp.BasicDataSource"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; destroy-method&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="close"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="driverClassName"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="com.mysql.jdbc.Driver"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="url"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="jdbc:mysql://127.0.0.1:3306/misc?useUnicode=true&amp;amp;amp;characterEncoding=UTF-8"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="username"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="misc_root"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="password"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="misc_root_pwd"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="poolPreparedStatements"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="true"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;其实这就是一个Spring的Bean的配置，注意id与上面的保持一致；&lt;br /&gt;&lt;br /&gt;整个AMQ的配置文件内容为：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;?&lt;/span&gt;&lt;span style="color: #ff00ff;"&gt;xml version="1.0" encoding="UTF-8"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;?&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;beans &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;xmlns&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://www.springframework.org/schema/beans"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; xmlns:amq&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://activemq.apache.org/schema/core"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; xmlns:xsi&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;&lt;br /&gt;    xsi:schemaLocation&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&lt;br /&gt;  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; Allows us to use system properties as variables in this configuration file &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;class&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="locations"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;            &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;classpath:/META-INF/credentials.properties&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;property&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;        The &amp;lt;broker&amp;gt; element is used to configure the ActiveMQ broker.&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;broker &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;xmlns&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://activemq.apache.org/schema/core"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; brokerName&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="localhost"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;            For better performances use VM cursor and small memory limit. For more information, see: http://activemq.apache.org/message-cursors.html Also, if your producer is "hanging", it's probably due to producer flow control. For more information, see:&lt;br /&gt;            http://activemq.apache.org/producer-flow-control.html&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;destinationPolicy&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;            &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;policyMap&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;policyEntries&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;policyEntry &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;topic&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="&amp;gt;"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; producerFlowControl&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="true"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; memoryLimit&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1mb"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;pendingSubscriberPolicy&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                            &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;vmCursor &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;pendingSubscriberPolicy&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;policyEntry&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;policyEntry &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;queue&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="&amp;gt;"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; producerFlowControl&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="true"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; memoryLimit&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1mb"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                        &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;                            Use VM cursor for better latency For more information, see: http://activemq.apache.org/message-cursors.html &amp;lt;pendingQueuePolicy&amp;gt; &amp;lt;vmQueueCursor/&amp;gt; &amp;lt;/pendingQueuePolicy&amp;gt;&lt;br /&gt;                        &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;policyEntry&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;                &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;policyEntries&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;            &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;policyMap&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;destinationPolicy&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;            The managementContext is used to configure how ActiveMQ is exposed in&lt;br /&gt;            JMX. By default, ActiveMQ uses the MBean server that is started by&lt;br /&gt;            the JVM. For more information, see:&lt;br /&gt;           &lt;br /&gt;            http://activemq.apache.org/jmx.html&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;managementContext&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;            &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;managementContext &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;createConnector&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="false"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;managementContext&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;            Configure message persistence for the broker. The default persistence&lt;br /&gt;            mechanism is the KahaDB store (identified by the kahaDB tag).&lt;br /&gt;            For more information, see:&lt;br /&gt;           &lt;br /&gt;            http://activemq.apache.org/persistence.html&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;        &amp;lt;persistenceAdapter&amp;gt;&lt;br /&gt;            &amp;lt;kahaDB directory="${activemq.base}/data/kahadb"/&amp;gt;&lt;br /&gt;        &amp;lt;/persistenceAdapter&amp;gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;persistenceAdapter&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;            &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;jdbcPersistenceAdapter &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;dataSource&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="#MySQL-DS"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;persistenceAdapter&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;            The transport connectors expose ActiveMQ over a given protocol to&lt;br /&gt;            clients and other brokers. For more information, see:&lt;br /&gt;           &lt;br /&gt;            http://activemq.apache.org/configuring-transports.html&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;transportConnectors&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;            &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;transportConnector &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="openwire"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; uri&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="tcp://0.0.0.0:61616"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;transportConnectors&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;broker&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; MySQL DataSource &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;id&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="MySQL-DS"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; class&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="org.apache.commons.dbcp.BasicDataSource"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; destroy-method&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="close"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="driverClassName"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="com.mysql.jdbc.Driver"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="url"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="jdbc:mysql://127.0.0.1:3306/misc?useUnicode=true&amp;amp;amp;characterEncoding=UTF-8"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="username"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="misc_root"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="password"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="misc_root_pwd"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;property &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="poolPreparedStatements"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; value&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="true"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;bean&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;        Enable web consoles, REST and Ajax APIs and demos&lt;br /&gt;        It also includes Camel (with its web console), see ${ACTIVEMQ_HOME}/conf/camel.xml for more info&lt;br /&gt;       &lt;br /&gt;        Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;import &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;resource&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="jetty.xml"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;beans&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;strong&gt;四、查看MySQL数据表&lt;/strong&gt;&lt;br /&gt;重新启动AMQ，启动完成之后，我们发现，misc数据库多了3张数据表：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;mysql&amp;gt; SHOW tables;&lt;br/&gt;+----------------+&lt;br/&gt;| Tables_in_misc |&lt;br/&gt;+----------------+&lt;br/&gt;| activemq_acks  |&lt;br/&gt;| activemq_lock  |&lt;br/&gt;| activemq_msgs  |&lt;br/&gt;+----------------+&lt;br/&gt;&lt;/div&gt;数据表activemq_msgs即为持久化消息表；&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;五、持久化消息&lt;/strong&gt;&lt;br /&gt;系统启动完毕之后，消息表中内容为空：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;mysql&amp;gt; SELECT * FROM activemq_msgs;&lt;br/&gt;Empty set&lt;br/&gt;&lt;/div&gt;1、发送消息：打开http://127.0.0.1:8161/demo/页面，找到&amp;ldquo;Send a message&amp;rdquo;链接，打开页面（http://127.0.0.1:8161/demo/send.html），填写完表格后，点击&amp;ldquo;Send&amp;rdquo;按键，即AMQ投递了一个消息；&lt;br /&gt;2、查看消息：发送之后，我们可以看到数据表中多了一条消息：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;mysql&amp;gt; SELECT * FROM activemq_msgs;&lt;br/&gt;+----+-----------------+--------------------------------------------+-----------+------------+-----+----------+&lt;br/&gt;| ID | CONTAINER       | MSGID_PROD                                 | MSGID_SEQ | EXPIRATION | MSG | PRIORITY |&lt;br/&gt;+----+-----------------+--------------------------------------------+-----------+------------+-----+----------+&lt;br/&gt;|  1 | queue://FOO.BAR | ID:SHI-AP33382A-1486-1309840138441-2:2:1:1 |         1 |          0 | |        5 |&lt;br/&gt;+----+-----------------+--------------------------------------------+-----------+------------+-----+----------+&lt;br/&gt;&lt;/div&gt;3、取得消息：找到&amp;ldquo;Receive a message&amp;rdquo;链接，打开页面（http://127.0.0.1:8161/demo/message/FOO/BAR?readTimeout=10000&amp;amp;type=queue），发现该页面不是一个标准HTML页面，查看其源代码，其内容是不是就是刚才的消息内容？&lt;br /&gt;4、查看消息：消息消费之后，我们可以看到数据表没有消息了：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;mysql&amp;gt; SELECT * FROM activemq_msgs;&lt;br/&gt;Empty set&lt;br/&gt;&lt;/div&gt;5、我们可以生产多条消息，然后一条一条的消费，发现消息表中的消息一条一条的减少；&lt;br /&gt;6、在发送消息页面，&amp;ldquo;Destination Type&amp;rdquo;如果选择&amp;ldquo;Topic&amp;rdquo;的话，则消息表中并没有数据，原因在于&amp;ldquo;Queue&amp;rdquo;为ptp模式消息，&amp;ldquo;Topic&amp;rdquo;为发布/订阅模式消息，当没有订阅者时，消息直接丢掉了。&lt;br /&gt;&lt;br /&gt;JMS的内容先介绍到这里，下面我将结合Spring来启动AMQ（即AMQ与应用一同启动，上面介绍的都是单独的启动），通过测试代码来发送和消费消息，敬请期待！&lt;br /&gt;&lt;br /&gt;------------------------&lt;br /&gt;欢迎大家批评指正:&lt;br /&gt;http://obullxl.iteye.com&lt;br /&gt;http://www.cnblogs.com/obullxl&lt;br /&gt;http://hi.baidu.com/obullxl&lt;br /&gt;-----------------------&lt;br /&gt;&lt;img src="http://counter.cnblogs.com/blog/rss/2098208" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2011/07/05/jms-activemq-persist-mysql.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2011/07/05/jms-activemq-persist-mysql.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/obullxl/archive/2011/06/24/mysql-last-insert-id.html</id><title type="text">使用MySQL的LAST_INSERT_ID来确定各分表的唯一ID值 - 老牛啊</title><summary type="text">MySQL数据表结构中，一般情况下，都会定义一个具有‘AUTO_INCREMENT’扩展属性的‘ID’字段，以确保数据表的每一条记录都可以用这个ID唯一确定；随着数据的不断扩张，为了提高数据库查询性能，降低查询热点，一般都会把一张表按照一定的规则分成多张数据表，即常说的分表；分表除了表名的索引不同之外，表结构都是一样的，如果各表的‘ID’字段仍采用‘AUTO_INCREMENT’的方式的话，ID就不能唯确定一条记录了。这时就需要一种处于各个分表之外的机制来生成ID，我们一般采用一张单独的数据表（不妨假设表名为‘ticket_mutex’）来保存这个ID，无论哪个分表有数据增加时，都是先到tic</summary><published>2011-06-24T15:19:00Z</published><updated>2011-06-24T15:19:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2011/06/24/mysql-last-insert-id.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2011/06/24/mysql-last-insert-id.html" /><content type="html">&lt;p&gt;MySQL数据表结构中，一般情况下，都会定义一个具有&amp;lsquo;AUTO_INCREMENT&amp;rsquo;扩展属性的&amp;lsquo;ID&amp;rsquo;字段，以确保数据表的每一条记录都可以用这个ID唯一确定；&lt;/p&gt;&lt;p&gt;&lt;br /&gt;随着数据的不断扩张，为了提高数据库查询性能，降低查询热点，一般都会把一张表按照一定的规则分成多张数据表，即常说的分表；&lt;br /&gt;&lt;br /&gt;分表除了表名的索引不同之外，表结构都是一样的，如果各表的&amp;lsquo;ID&amp;rsquo;字段仍采用&amp;lsquo;AUTO_INCREMENT&amp;rsquo;的方式的话，ID就不能唯确定一条记录了。&lt;br /&gt;&lt;br /&gt;这时就需要一种处于各个分表之外的机制来生成ID，我们一般采用一张单独的数据表（不妨假设表名为&amp;lsquo;ticket_mutex&amp;rsquo;）来保存这个ID，无论哪个分表有数据增加时，都是先到ticket_mutex表把ID值加1，然后取得ID值。&lt;br /&gt;&lt;br /&gt;这个取ID的操作看似很复杂，所幸的是，MySQL提供了LAST_INSERT_ID机制，让我们能一步完成。&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;1、新建数据表ticket_mutex&lt;/strong&gt;&lt;/p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;CREATE TABLE ticket_mutex (&lt;br/&gt;    name varchar(32) NOT NULL PRIMARY KEY COMMENT '业务名称',&lt;br/&gt;    value bigint(20) UNSIGNED NOT NULL COMMENT 'ID值'&lt;br/&gt;)Engine=InnoDB DEFAULT CHARSET=UTF8 COMMENT '保存分表ID表';&lt;br/&gt;&lt;/div&gt;字段&amp;lsquo;name&amp;rsquo;用来说明这个ID是哪个业务的，比如&amp;lsquo;用户&amp;rsquo;的ID，我们可以定为&amp;lsquo;USER&amp;rsquo;；&lt;br /&gt;字段&amp;lsquo;value&amp;rsquo;即该业务的ID值。&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;2、初始化业务和其ID值&lt;/strong&gt;&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;INSERT INTO ticket_mutex(name, value) values('USER', 0),('POST', 0);&lt;br/&gt;+------+-------+&lt;br/&gt;| name | value |&lt;br/&gt;+------+-------+&lt;br/&gt;| POST |     0 |&lt;br/&gt;| USER |     0 |&lt;br/&gt;+------+-------+&lt;br/&gt;&lt;/div&gt;我们初始化了2条记录，即有2个不同的业务，分别代表&amp;lsquo;用户信息&amp;rsquo;和&amp;lsquo;主题信息&amp;rsquo;，它们初始ID值均为&amp;lsquo;0&amp;rsquo;；&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;3、获取分表唯一ID&lt;/strong&gt;&lt;br /&gt;这个时候就要利用MySQL提供的LAST_INSERT_ID()机制了。&lt;br /&gt;在往用户表里新增一条数据时，获取&amp;lsquo;用户ID&amp;rsquo;：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;UPDATE ticket_mutex SET value=LAST_INSERT_ID(value+1) WHERE name='USER';SELECT LAST_INSERT_ID();&lt;br/&gt;+------------------+&lt;br/&gt;| LAST_INSERT_ID() |&lt;br/&gt;+------------------+&lt;br/&gt;|                1 |&lt;br/&gt;+------------------+&lt;br/&gt;&lt;/div&gt;通过这条语句之后，我们得到结果为1，这个值就是我们所需要的值。再来查看数据记录，我们发现记录总数没有改变，但是&amp;lsquo;用户&amp;rsquo;的ID已经为1了；&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;+------+-------+&lt;br/&gt;| name | value |&lt;br/&gt;+------+-------+&lt;br/&gt;| POST |     0 |&lt;br/&gt;| USER |     1 |&lt;br/&gt;+------+-------+&lt;br/&gt;&lt;/div&gt;同样的方法，我们可获取&amp;lsquo;主题&amp;rsquo;的ID：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;UPDATE ticket_mutex SET value=LAST_INSERT_ID(value+1) WHERE name='POST';SELECT LAST_INSERT_ID();&lt;br/&gt;+------------------+&lt;br/&gt;| LAST_INSERT_ID() |&lt;br/&gt;+------------------+&lt;br/&gt;|                1 |&lt;br/&gt;+------------------+&lt;br/&gt;&lt;/div&gt;查看所有的记录：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;+------+-------+&lt;br/&gt;| name | value |&lt;br/&gt;+------+-------+&lt;br/&gt;| POST |     1 |&lt;br/&gt;| USER |     1 |&lt;br/&gt;+------+-------+&lt;br/&gt;&lt;/div&gt;&lt;br /&gt;从上可以看出，通过MySQL的LAST_INSERT_ID机制，我们可以保证在记录总数不增长的情况下，让业务ID在不断的增加，从而保证了分表ID的唯一性。&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;4、LAST_INSERT_ID说明&lt;/strong&gt;&lt;br /&gt;从名字可以看出，LAST_INSERT_ID即为最后插入的ID值，根据MySQL的官方手册说明，它有2种使用方法&lt;br /&gt;一是不带参数：LAST_INSERT_ID()，这种方法和AUTO_INCREMENT属性一起使用，当往带有&amp;lsquo;AUTO_INCREMENT&amp;rsquo;属性字段的表中新增记录时，LAST_INSERT_ID()即返回该字段的值，大家可试下（我已经验证过）；&lt;br /&gt;二是带有表达式：如上面介绍的LAST_INSERT_ID(value+1)，它返回的是表达式的值，即&amp;lsquo;value+1&amp;rsquo;；&lt;br /&gt;&lt;br /&gt;------------------------&lt;br /&gt;欢迎大家批评指正:&lt;br /&gt;http://obullxl.iteye.com&lt;br /&gt;http://www.cnblogs.com/obullxl&lt;br /&gt;http://hi.baidu.com/obullxl&lt;br /&gt;-----------------------&lt;img src="http://counter.cnblogs.com/blog/rss/2089416" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2011/06/24/mysql-last-insert-id.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2011/06/24/mysql-last-insert-id.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/obullxl/archive/2011/06/13/android-animation-tween-lady.html</id><title type="text">Android动画之Tween动画实战 - 老牛啊</title><summary type="text">Android动画分为Tween动画和Frame动画，上一节通过一个实例介绍了Frame动画，本节将介绍Tween动画。Tween可以把对象进行缩小、放大、旋转和渐变等操作。 Tween动画有四个主要的实现，下面分别说明下：1、AlphaAnimation：渐变动画，主要控制透明度变化动画类，常使用AlphaAnimation(float fromAlpha, float toAlpha)来构造； fromAlpha：动画开始时的透明度（取值范围为0.0到1.0）； toAlpha：动画结束时的透明度；2、ScaleAnimation：主要控制尺度变化的动画类，常使用ScaleAnimati.</summary><published>2011-06-13T12:39:00Z</published><updated>2011-06-13T12:39:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2011/06/13/android-animation-tween-lady.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2011/06/13/android-animation-tween-lady.html" /><content type="html">&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Android动画分为Tween动画和Frame动画，上一节通过一个实例介绍了Frame动画，本节将介绍Tween动画。Tween可以把对象进行缩小、放大、旋转和渐变等操作。&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Tween动画有四个主要的实现，下面分别说明下：&lt;/div&gt;&lt;div&gt;1、AlphaAnimation：渐变动画，主要控制透明度变化动画类，常使用AlphaAnimation(float fromAlpha, float toAlpha)来构造；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; fromAlpha：动画开始时的透明度（取值范围为0.0到1.0）；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; toAlpha：动画结束时的透明度；&lt;/div&gt;&lt;div&gt;2、ScaleAnimation：主要控制尺度变化的动画类，常使用ScaleAnimation(float fromX, float toX, float fromY, float toY, int pivotXType, float pivotXValue, int pivotYType, float pivotYValue)来构造；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; fromX：动画开始X坐标上的伸缩尺度；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; toX：动画结束X坐标上的伸缩尺度；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; fromY：动画开始Y坐标上的伸缩尺度；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; toY：动画结束Y坐标上的伸缩尺度；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; pivotXType：X坐标上的伸缩模式，取值有：Animation.ABSOLUTE, Animation.RELATIVE_TO_SELF, Animation.RELATIVE_TO_PARENT；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; pivotXValue：X坐标上的伸缩值；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; pivotYType：Y坐标上的伸缩模式，取值有：Animation.ABSOLUTE, Animation.RELATIVE_TO_SELF, Animation.RELATIVE_TO_PARENT；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; pivotYValue：Y坐标上的伸缩值；&lt;/div&gt;&lt;div&gt;3、TranslateAnimation：主要控制位置变换的动画实现类，常使用TranslateAnimation(float fromXDelta, float toXDelta, float fromYDelta, float toYDelta)来构造；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; fromXDelta：动画开始的X坐标；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; toXDelta：动画结束的X坐标；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; fromYDelta：动画开始的Y坐标；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; toYDelta：动画结束的Y坐标；&lt;/div&gt;&lt;div&gt;4、RotateAnimation：主要控制旋转的动画实现类，常使用RotateAnimation(float fromDegrees, float toDegrees, int pivotXType, float pivotXValue, int pivotYType, float pivotYValue)来构造；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; fromDegrees：旋转开始角度；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; toDegrees：旋转结束角度；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; pivotXType, pivotXValue, pivotYType, pivotYValue与尺度变化动画ScaleAnimation类似；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 下面以一个实例来进行这些动画。&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;1、加入将要进行动画变化的MM图片（为了避免侵犯他人肖像权，这次的MM和上次的桌面背景不一样，这个MM没有头像的）：&lt;/div&gt;&lt;div&gt;&lt;img src="http://pic002.cnblogs.com/images/2011/198133/2011061320371151.png" /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2、创建Layout布局XML配置tween.xml文件：&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;?&lt;/span&gt;&lt;span style="color: #ff00ff;"&gt;xml version="1.0" encoding="UTF-8"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;?&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;xmlns:apk&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://schemas.android.com/apk/res/android"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:orientation&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="vertical"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="fill_parent"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="fill_parent"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; 动画MM &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;ImageView &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:id&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@+id/TweenMM"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:src&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@drawable/tween"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; 动画控制按钮 &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:layout_weight&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:orientation&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="horizontal"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="fill_parent"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;Button &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:text&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="ScaleAnim"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_weight&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="fill_parent"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:onClick&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="onBtnScaleAnimClick"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;Button &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:text&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="AlphaAnim"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_weight&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="fill_parent"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:onClick&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="onBtnAlphaAnimClick"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:layout_weight&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:orientation&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="horizontal"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="fill_parent"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;Button &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:text&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="TranslateAnim"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_weight&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:onClick&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="onBtnTranslateAnimClick"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;Button &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:text&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="RotateAnim"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_weight&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:onClick&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="onBtnRotateAnimClick"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 一张图片和4个按钮，这4个按钮就是控制图片动画的。&lt;/div&gt;&lt;div&gt;3、对于每个动画，我们都以一个XML配置文件来设置各自动画的属性。&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; AlphaAnimation（tween_alpha.xml）的配置文件内容：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;?&lt;/span&gt;&lt;span style="color: #ff00ff;"&gt;xml version="1.0" encoding="UTF-8"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;?&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;set &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;xmlns:android&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://schemas.android.com/apk/res/android"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;alpha &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;android:fromAlpha&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="0.1"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:toAlpha&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1.0"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:duration&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="5000"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;set&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; android:duration指示该动画持续的时间，以毫秒为单位。&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; RotateAnimation（tween_rotate.xml）的配置文件内容：&lt;/div&gt;&lt;div&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;?&lt;/span&gt;&lt;span style="color: #ff00ff;"&gt;xml version="1.0" encoding="UTF-8"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;?&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;set &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;xmlns:android&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://schemas.android.com/apk/res/android"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;rotate &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;android:fromDegrees&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="0"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:toDegrees&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="360"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:pivotX&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="50%"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:pivotY&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="50%"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:duration&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="5000"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;set&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ScaleAnimation（tween_scale.xml）的配置文件内容：&lt;/div&gt;&lt;div&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;?&lt;/span&gt;&lt;span style="color: #ff00ff;"&gt;xml version="1.0" encoding="UTF-8"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;?&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;set &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;xmlns:android&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://schemas.android.com/apk/res/android"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;scale &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;android:fromXScale&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="0.0"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:toXScale&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1.0"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:fromYScale&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="0.0"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:toYScale&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="1.0"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:pivotX&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="50%"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:pivotY&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="50%"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:duration&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="5000"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;set&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; TranslateAnimation（tween_translate.xml）的配置文件内容：&lt;/div&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;?&lt;/span&gt;&lt;span style="color: #ff00ff;"&gt;xml version="1.0" encoding="UTF-8"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;?&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;set &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;xmlns:android&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://schemas.android.com/apk/res/android"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;translate &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;android:fromXDelta&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="10"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:toXDelta&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="100"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:fromYDelta&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="10"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; android:toYDelta&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="100"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;set&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;4、Activity界面类：&lt;br /&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;/**&lt;br/&gt; * Copyright (c) 2004-2011 All Rights Reserved.&lt;br/&gt; */&lt;br/&gt;package com.aboy.android.study.animation;&lt;br/&gt;&lt;br/&gt;import android.app.Activity;&lt;br/&gt;import android.os.Bundle;&lt;br/&gt;import android.view.View;&lt;br/&gt;import android.view.animation.Animation;&lt;br/&gt;import android.view.animation.AnimationUtils;&lt;br/&gt;import android.widget.ImageView;&lt;br/&gt;&lt;br/&gt;import com.aboy.android.study.R;&lt;br/&gt;&lt;br/&gt;/**&lt;br/&gt; * 通过XML配置文件的方式实现Tween动画&lt;br/&gt; *&lt;br/&gt; * @author obullxl@gmail.com&lt;br/&gt; * @version $Id: TweenXMLActivity.java, v 0.1 2011-6-11 下午01:36:39 oldbulla Exp $&lt;br/&gt; */&lt;br/&gt;public class TweenXMLActivity extends Activity {&lt;br/&gt;    public static final String TAG = "TweenActivity";&lt;br/&gt;&lt;br/&gt;    // 动画图片&lt;br/&gt;    private ImageView          tweenMM;&lt;br/&gt;&lt;br/&gt;    /** &lt;br/&gt;     * @see android.app.Activity#onCreate(android.os.Bundle)&lt;br/&gt;     */&lt;br/&gt;    public void onCreate(Bundle cycle) {&lt;br/&gt;        super.onCreate(cycle);&lt;br/&gt;        super.setContentView(R.layout.tween);&lt;br/&gt;&lt;br/&gt;        // 取得动画图片&lt;br/&gt;        this.tweenMM = (ImageView) super.findViewById(R.id.TweenMM);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    /**&lt;br/&gt;     * 按钮：尺寸变化动画&lt;br/&gt;     */&lt;br/&gt;    public void onBtnScaleAnimClick(View view) {&lt;br/&gt;        // 动画开始&lt;br/&gt;        this.doStartAnimation(R.anim.tween_scale);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    /**&lt;br/&gt;     * 按钮：渐变动画&lt;br/&gt;     */&lt;br/&gt;    public void onBtnAlphaAnimClick(View view) {&lt;br/&gt;        // 动画开始&lt;br/&gt;        this.doStartAnimation(R.anim.tween_alpha);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    /**&lt;br/&gt;     * 按钮：位置变化动画&lt;br/&gt;     */&lt;br/&gt;    public void onBtnTranslateAnimClick(View view) {&lt;br/&gt;        // 动画开始&lt;br/&gt;        this.doStartAnimation(R.anim.tween_translate);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    /**&lt;br/&gt;     * 按钮：旋转动画&lt;br/&gt;     */&lt;br/&gt;    public void onBtnRotateAnimClick(View view) {&lt;br/&gt;        // 动画开始&lt;br/&gt;        this.doStartAnimation(R.anim.tween_rotate);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    /**&lt;br/&gt;     * 开始动画&lt;br/&gt;     */&lt;br/&gt;    private void doStartAnimation(int animId) {&lt;br/&gt;        // 加载动画&lt;br/&gt;        Animation animation = AnimationUtils.loadAnimation(this, animId);&lt;br/&gt;        // 动画开始&lt;br/&gt;        this.tweenMM.startAnimation(animation);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 使用AnimationUtils类，可以非常方便的构造动画类；&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 开始动画，只要ImageView.startAnimation即可。&amp;nbsp;&lt;/div&gt;&lt;img src="http://counter.cnblogs.com/blog/rss/2080037" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2011/06/13/android-animation-tween-lady.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2011/06/13/android-animation-tween-lady.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/obullxl/archive/2011/06/10/android-animation-frame-dance.html</id><title type="text">Android动画之Frame动画实战 - 老牛啊</title><summary type="text">Android动画分为Tween动画和Frame动画，Tween动画主要包括图片的放大缩小、旋转、透明度变化、移动等等操作；Frame动画则简单得多了，就是把一张张的图片连续播放产生动画效果。 本节主要介绍一下Frame动画，Tween动画会在后面的文章中介绍，敬请关注。 Frame动画主要是通过AnimationDrawable类来实现的，它有start()和stop()两个重要的方法来启动和停止动画。Frame动画一般通过XML文件配置，在工程的res/anim目录下创建一个XML配置文件，该配置文件有一个&lt;animation-list&gt;根元素和若干个&lt;item&gt;子</summary><published>2011-06-10T13:26:00Z</published><updated>2011-06-10T13:26:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2011/06/10/android-animation-frame-dance.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2011/06/10/android-animation-frame-dance.html" /><content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Android动画分为Tween动画和Frame动画，Tween动画主要包括图片的放大缩小、旋转、透明度变化、移动等等操作；Frame动画则简单得多了，就是把一张张的图片连续播放产生动画效果。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 本节主要介绍一下Frame动画，Tween动画会在后面的文章中介绍，敬请关注。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Frame动画主要是通过AnimationDrawable类来实现的，它有start()和stop()两个重要的方法来启动和停止动画。Frame动画一般通过XML文件配置，在工程的res/anim目录下创建一个XML配置文件，该配置文件有一个&amp;lt;animation-list&amp;gt;根元素和若干个&amp;lt;item&amp;gt;子元素。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 实现一个人跳舞的Frame动画，6张图片如下所示：&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img src="http://pic002.cnblogs.com/images/2011/198133/2011061021195326.png" /&gt;&lt;img src="http://pic002.cnblogs.com/images/2011/198133/2011061021200360.png" /&gt;&lt;img src="http://pic002.cnblogs.com/images/2011/198133/2011061021201389.png" /&gt;&lt;img src="http://pic002.cnblogs.com/images/2011/198133/2011061021202348.png" /&gt;&lt;img src="http://pic002.cnblogs.com/images/2011/198133/2011061021203295.png" /&gt;&lt;img src="http://pic002.cnblogs.com/images/2011/198133/2011061021204117.png" /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;1、把这6张图片放到res/drawable目录下，分别取名为：p01.png，p02.png，p03.png，p04.png，p05.png，p06.png。&lt;/p&gt;&lt;p&gt;2、在res/anim目录下创建一个XML配置文件，文件名为：dance.xml，文件内容：&lt;/p&gt;&lt;p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;?&lt;/span&gt;&lt;span style="color: #ff00ff;"&gt;xml version="1.0" encoding="utf-8"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;?&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;animation-list &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;xmlns:apk&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://schemas.android.com/apk/res/android"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:oneshot&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="false"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;item &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:drawable&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@drawable/p01"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:duration&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="500"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;item &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:drawable&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@drawable/p02"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:duration&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="500"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;item &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:drawable&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@drawable/p03"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:duration&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="500"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;item &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:drawable&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@drawable/p04"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:duration&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="500"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;item &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:drawable&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@drawable/p05"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:duration&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="500"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;item &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:drawable&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@drawable/p06"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:duration&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="500"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;animation-list&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; apk:oneshot指示是否只运行一次，设置为false则意味着循环播放。&lt;/p&gt;&lt;p&gt;3、在res/layout目录下创建layout配置文件dance.xml，文件内容：&lt;/p&gt;&lt;p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;?&lt;/span&gt;&lt;span style="color: #ff00ff;"&gt;xml version="1.0" encoding="utf-8"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;?&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;xmlns:apk&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="http://schemas.android.com/apk/res/android"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:orientation&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="vertical"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="fill_parent"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="fill_parent"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; Frame动画图片 &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;ImageView &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:id&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@+id/ImgDance"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:background&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="@anim/dance"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; 动画控制按钮 &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="fill_parent"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:orientation&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="horizontal"&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;Button &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:text&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="开始"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:onClick&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="onStartDance"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;Button &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;apk:text&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="结束"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_width&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:layout_height&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="wrap_content"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; apk:onClick&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="onStopDance"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #800000;"&gt;LinearLayout&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; apk:background使用上面的动画作为背景，意味着要取得动画，只要取得该View的背景即可，当然可以在代码中通过设置背景的方式指定；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; apk:onClick指示按钮的动作，当然可以在代码中通过实现OnClickListener的方式实现。&lt;/p&gt;&lt;p&gt;4、Activity代码：&lt;/p&gt;&lt;p&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;/**&lt;br/&gt; * Copyright (c) 2004-2011 All Rights Reserved.&lt;br/&gt; */&lt;br/&gt;package com.aboy.android.study.animation;&lt;br/&gt;&lt;br/&gt;import android.app.Activity;&lt;br/&gt;import android.graphics.drawable.AnimationDrawable;&lt;br/&gt;import android.os.Bundle;&lt;br/&gt;import android.view.View;&lt;br/&gt;import android.widget.ImageView;&lt;br/&gt;&lt;br/&gt;import com.aboy.android.study.R;&lt;br/&gt;&lt;br/&gt;/**&lt;br/&gt; * Frame动画&lt;br/&gt; *&lt;br/&gt; * @author obullxl@gmail.com&lt;br/&gt; * @version $Id: FrameActivity.java, v 0.1 2011-6-10 下午12:49:46 oldbulla Exp $&lt;br/&gt; */&lt;br/&gt;public class FrameActivity extends Activity {&lt;br/&gt;    public static final String TAG = "FrameActivity";&lt;br/&gt;    &lt;br/&gt;    // 显示动画的组件&lt;br/&gt;    private ImageView imgDance;&lt;br/&gt;    // Frame动画&lt;br/&gt;    private AnimationDrawable animDance;&lt;br/&gt;    &lt;br/&gt;    /** &lt;br/&gt;     * @see android.app.Activity#onCreate(android.os.Bundle)&lt;br/&gt;     */&lt;br/&gt;    public void onCreate(Bundle cycle) {&lt;br/&gt;        super.onCreate(cycle);&lt;br/&gt;        super.setContentView(R.layout.dance);&lt;br/&gt;        &lt;br/&gt;        // 实例化组件&lt;br/&gt;        this.imgDance = (ImageView) super.findViewById(R.id.ImgDance);&lt;br/&gt;        &lt;br/&gt;        // 获得背景（6个图片形成的动画）&lt;br/&gt;        this.animDance = (AnimationDrawable) this.imgDance.getBackground();&lt;br/&gt;    }&lt;br/&gt;    &lt;br/&gt;    /**&lt;br/&gt;     * 按钮：开始&amp;lsquo;跳舞&amp;rsquo;动画&lt;br/&gt;     */&lt;br/&gt;    public void onStartDance(View view) {&lt;br/&gt;        this.animDance.start();&lt;br/&gt;    }&lt;br/&gt;    &lt;br/&gt;    /**&lt;br/&gt;     * 按钮：停止&amp;lsquo;跳舞&amp;rsquo;动画&lt;br/&gt;     */&lt;br/&gt;    public void onStopDance(View view) {&lt;br/&gt;        this.animDance.stop();&lt;br/&gt;    }&lt;br/&gt;    &lt;br/&gt;}&lt;br/&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 代码就那么的几行，运行之后，点击&amp;ldquo;开始&amp;rdquo;按钮后，动画一直不停的播放，直到点击&amp;ldquo;停止&amp;rdquo;为止。&amp;nbsp;&lt;/p&gt;&lt;img src="http://counter.cnblogs.com/blog/rss/2077955" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2011/06/10/android-animation-frame-dance.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2011/06/10/android-animation-frame-dance.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/obullxl/archive/2011/06/09/android-sdcard-image-wallpager.html</id><title type="text">Android从SDCard中取得图片并设置为桌面背景 - 老牛啊</title><summary type="text">1、 把背景图片push到SDCard中adb push MM-320x480.png /sdcard/确认是否已经存在了，可以到SDCard看一下：adb shellcd sdcardls可以看到刚才上传的图片:2、编写Activity程序 public static final String TAG = "WallpaperActivity"; /** * 背景图片名称 */ private static final String FILE_NAME = "MM-320x480.png"; /** * @see android.app.Activit</summary><published>2011-06-09T14:40:00Z</published><updated>2011-06-09T14:40:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2011/06/09/android-sdcard-image-wallpager.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2011/06/09/android-sdcard-image-wallpager.html" /><content type="html">&lt;div&gt;1、 把背景图片push到SDCard中&lt;/div&gt;&lt;div&gt;adb push MM-320x480.png /sdcard/&lt;/div&gt;&lt;div&gt;确认是否已经存在了，可以到SDCard看一下：&lt;/div&gt;&lt;div&gt;adb shell&lt;/div&gt;&lt;div&gt;cd sdcard&lt;/div&gt;&lt;div&gt;ls&lt;/div&gt;&lt;div&gt;可以看到刚才上传的图片:&lt;/div&gt;&lt;div&gt;&lt;img src="http://pic002.cnblogs.com/images/2011/198133/2011060922382151.png" /&gt;&lt;/div&gt;&lt;div&gt;2、编写Activity程序&lt;/div&gt;&lt;div align="left"&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #000000;"&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;static&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;final&lt;/span&gt;&lt;span style="color: #000000;"&gt; String  TAG       &lt;/span&gt;&lt;span style="color: #000000;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;WallpaperActivity&lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;/**&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;     * 背景图片名称&lt;br /&gt;     &lt;/span&gt;&lt;span style="color: #008000;"&gt;*/&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;private&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;static&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;final&lt;/span&gt;&lt;span style="color: #000000;"&gt; String FILE_NAME &lt;/span&gt;&lt;span style="color: #000000;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;MM-320x480.png&lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;/**&lt;/span&gt;&lt;span style="color: #008000;"&gt; &lt;br /&gt;     * &lt;/span&gt;&lt;span style="color: #808080;"&gt;@see&lt;/span&gt;&lt;span style="color: #008000;"&gt; android.app.Activity#onCreate(android.os.Bundle)&lt;br /&gt;     &lt;/span&gt;&lt;span style="color: #008000;"&gt;*/&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; onCreate(Bundle cycle) {&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;super&lt;/span&gt;&lt;span style="color: #000000;"&gt;.onCreate(cycle);&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;super&lt;/span&gt;&lt;span style="color: #000000;"&gt;.setContentView(R.layout.wallpaper);&lt;br /&gt;        &lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt; 取得背景图片&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;        Bitmap wallpaper &lt;/span&gt;&lt;span style="color: #000000;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;.getWallpager();&lt;br /&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt; 设置桌面背景&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;.putWallpaper(wallpaper);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;/**&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;     * 取得SDCard中的背景图片&lt;br /&gt;     &lt;/span&gt;&lt;span style="color: #008000;"&gt;*/&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;private&lt;/span&gt;&lt;span style="color: #000000;"&gt; Bitmap getWallpager() {&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt; SDCard的路径，也就是&amp;ldquo;/sdcard/&amp;rdquo;&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;        File root &lt;/span&gt;&lt;span style="color: #000000;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; Environment.getExternalStorageDirectory();&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt; MM图片&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;        File wall &lt;/span&gt;&lt;span style="color: #000000;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; File(root, FILE_NAME);&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt; MM图片路径&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;        String path &lt;/span&gt;&lt;span style="color: #000000;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; wall.getAbsolutePath();&lt;br /&gt;&lt;br /&gt;        Log.d(TAG, &lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;MM文件路径为：&lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #000000;"&gt;+&lt;/span&gt;&lt;span style="color: #000000;"&gt; path);&lt;br /&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="color: #000000;"&gt; BitmapFactory.decodeFile(path);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #008000;"&gt;/**&lt;/span&gt;&lt;span style="color: #008000;"&gt;&lt;br /&gt;     * 设置桌面背景&lt;br /&gt;     &lt;/span&gt;&lt;span style="color: #008000;"&gt;*/&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;private&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; putWallpaper(Bitmap bitmap) {&lt;br /&gt;        &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;try&lt;/span&gt;&lt;span style="color: #000000;"&gt; {&lt;br /&gt;            WallpaperManager wallpaperManager &lt;/span&gt;&lt;span style="color: #000000;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; WallpaperManager.getInstance(&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;);&lt;br /&gt;            wallpaperManager.setBitmap(bitmap);&lt;br /&gt;        } &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;catch&lt;/span&gt;&lt;span style="color: #000000;"&gt; (IOException e) {&lt;br /&gt;            String msg &lt;/span&gt;&lt;span style="color: #000000;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;设置桌面背景发生异常:&lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt; &lt;/span&gt;&lt;span style="color: #000000;"&gt;+&lt;/span&gt;&lt;span style="color: #000000;"&gt; e.getLocalizedMessage();&lt;br /&gt;            Log.e(TAG, &lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;设置桌面背景发生异常！&lt;/span&gt;&lt;span style="color: #000000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;, e);&lt;br /&gt;            Toast.makeText(&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;, msg, Toast.LENGTH_LONG).show();&lt;br /&gt;        }&lt;br /&gt;    }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;3、增加权限&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在AndroidManifest.xml文件中增加设置桌面背景权限：&lt;/div&gt;&lt;div align="left"&gt;&lt;div style="background-color: #F5F5F5;border: 1px solid #CCCCCC;padding:10px;"&gt;&lt;div&gt;&lt;span style="color: #008000;"&gt;&amp;lt;!--&lt;/span&gt;&lt;span style="color: #008000;"&gt; 设置桌面背景的权限 &lt;/span&gt;&lt;span style="color: #008000;"&gt;--&amp;gt;&lt;/span&gt;&lt;span style="color: #000000;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #800000;"&gt;uses-permission &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;android:name&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;="android.permission.SET_WALLPAPER"&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; &lt;/span&gt;&lt;span style="color: #0000ff;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;4、运行程序&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 运行程序，再回到桌面，背景已经改变了。&lt;/div&gt;&lt;img src="http://counter.cnblogs.com/blog/rss/2076900" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2011/06/09/android-sdcard-image-wallpager.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2011/06/09/android-sdcard-image-wallpager.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/obullxl/archive/2011/06/09/apache-tomcat-cluster-config.html</id><title type="text">Apache与Tomcat集群配置 - 老牛啊</title><summary type="text">PS：今天整理硬盘，发现这个有用的收藏，与大家分享！一、环境说明WindowsXPapache_2.0.59-win32-x86-no_ssl.msihttp://httpd.apache.org/mod_jk-apache-2.0.59.sohttp://tomcat.apache.org/download-connectors.cgiapache-tomcat-5.5.23.zip http://tomcat.apache.org/download-55.cgi我的程序分别安装到D:\webserver\ApacheGroup\Apache2D:\webserver\TomcatClust</summary><published>2011-06-09T05:17:00Z</published><updated>2011-06-09T05:17:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2011/06/09/apache-tomcat-cluster-config.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2011/06/09/apache-tomcat-cluster-config.html" /><content type="html">PS：今天整理硬盘，发现这个有用的收藏，与大家分享！&lt;span style="font-family: 宋体;" face="宋体"&gt;&amp;nbsp;&lt;/span&gt;&lt;div class="Section0"&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;一、&amp;nbsp;环境说明&lt;/p&gt;&lt;p class="p0"&gt;Windows&amp;nbsp;XP&lt;/p&gt;&lt;p class="p0"&gt;apache_2.0.59-win32-x86-no_ssl.msi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="http://httpd.apache.org/"&gt;http://httpd.apache.org/&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;mod_jk-apache-2.0.59.so&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="http://tomcat.apache.org/download-connectors.cgi"&gt;http://tomcat.apache.org/download-connectors.cgi&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;apache-tomcat-5.5.23.zip&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="http://tomcat.apache.org/download-55.cgi"&gt;http://tomcat.apache.org/download-55.cgi&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;我的程序分别安装到&lt;/p&gt;&lt;p class="p0"&gt;D:\webserver\Apache&amp;nbsp;Group\Apache2&lt;/p&gt;&lt;p class="p0"&gt;D:\webserver\TomcatCluster\tomcat1&lt;/p&gt;&lt;p class="p0"&gt;D:\webserver\TomcatCluster\tomcat2&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;Apache&lt;span style="font-family: 宋体;" face="宋体"&gt;安装完后，在右下角状态栏中可以看到&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Apache&amp;nbsp;Service&amp;nbsp;Monitor&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;可以控制&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Apache&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的状态。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;验证&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Apache&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;是否安装成功，可以访问&lt;/span&gt;&lt;a href="http://localhost/"&gt;http://localhost&lt;/a&gt;&amp;nbsp;如果能看到&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Apache&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的预制页面，说明安装成功，如果不行，可以访问&lt;/span&gt;&lt;a href="http://localhost:8080/"&gt;http://localhost:8080&lt;/a&gt;&amp;nbsp;试试（可能因为&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;IIS&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;已经使用了&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;80&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;端口&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;我的就是&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;8080,&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;可以修改&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Apache&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的配置文件来修改）&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;二、&amp;nbsp;负载均衡&lt;/p&gt;&lt;p class="p0"&gt;找到&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Apache&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;安装目录下&lt;/span&gt;conf目录中的httpd.conf文件。&lt;/p&gt;&lt;p class="p0"&gt;在文件最后添加一句：&lt;/p&gt;&lt;p class="p0"&gt;include&amp;nbsp;"D:\webserver\Apache&amp;nbsp;Group\Apache2\conf\mod_jk.conf"&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;接着在&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;conf&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;目录中新建文件&lt;/span&gt;mod_jk.conf并添加下面的内容：&lt;/p&gt;&lt;p class="p0"&gt;#&lt;span style="font-family: 宋体;" face="宋体"&gt;加载&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;mod_jk&amp;nbsp;Module&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;LoadModule&amp;nbsp;jk_module&amp;nbsp;modules/mod_jk-apache-2.0.59.so&lt;/p&gt;&lt;p class="p0"&gt;#&lt;span style="font-family: 宋体;" face="宋体"&gt;指定&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;workers.properties&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;文件路径&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;JkWorkersFile&amp;nbsp;conf/workers.properties&lt;/p&gt;&lt;p class="p0"&gt;#&lt;span style="font-family: 宋体;" face="宋体"&gt;指定哪些请求交给&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;处理&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;,"controller"&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;为在&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;workers.propertise&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;里指定的负载分配控制器名&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;JkMount&amp;nbsp;/*.jsp&amp;nbsp;controller&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;在&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;conf&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;目录下新建&lt;/span&gt;workers.properties文件并添加如下内容：&lt;/p&gt;&lt;p class="p0"&gt;#server&lt;/p&gt;&lt;p class="p0"&gt;worker.list&amp;nbsp;=&amp;nbsp;controller&lt;/p&gt;&lt;p class="p0"&gt;#========tomcat1========&lt;/p&gt;&lt;p class="p0"&gt;worker.tomcat1.port=11009&lt;/p&gt;&lt;p class="p0"&gt;worker.tomcat1.host=localhost&lt;/p&gt;&lt;p class="p0"&gt;worker.tomcat1.type=ajp13&lt;/p&gt;&lt;p class="p0"&gt;worker.tomcat1.lbfactor&amp;nbsp;=&amp;nbsp;1&lt;/p&gt;&lt;p class="p0"&gt;#========tomcat2========&lt;/p&gt;&lt;p class="p0"&gt;worker.tomcat2.port=12009&lt;/p&gt;&lt;p class="p0"&gt;worker.tomcat2.host=localhost&lt;/p&gt;&lt;p class="p0"&gt;worker.tomcat2.type=ajp13&lt;/p&gt;&lt;p class="p0"&gt;worker.tomcat2.lbfactor&amp;nbsp;=&amp;nbsp;1&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;#========controller,&lt;span style="font-family: 宋体;" face="宋体"&gt;负载均衡控制器&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;========&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;worker.controller.type=lb&lt;/p&gt;&lt;p class="p0"&gt;worker.controller.balanced_workers=tomcat1,tomcat2&lt;/p&gt;&lt;p class="p0"&gt;worker.controller.sticky_session=1&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;（解释一下&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;AJP13&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;是&amp;nbsp;&lt;/span&gt;Apache&amp;nbsp;JServ&amp;nbsp;Protocol&amp;nbsp;version&amp;nbsp;1.3）&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;将mod_jk-apache-2.0.59.so&amp;nbsp;复制到&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Apache&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的&lt;/span&gt;modules目录中。&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;接下来配置&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;2&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;个&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Tomcat&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;打开tomcat1\conf\&amp;nbsp;server.xml&lt;/p&gt;&lt;p class="p0"&gt;将Server&amp;nbsp;port&amp;nbsp;改为11005&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;Server&amp;nbsp;port="11005"&amp;nbsp;shutdown="SHUTDOWN"&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;将Define&amp;nbsp;Connector&amp;nbsp;port改为11080&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;Connector&amp;nbsp;port="11080"&amp;nbsp;maxHttpHeaderSize="8192"&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;将&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;AJP13&amp;nbsp;&lt;/span&gt;Connector&amp;nbsp;port改为11009&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;Connector&amp;nbsp;port="11009"&amp;nbsp;&amp;nbsp;enableLookups="false"&amp;nbsp;redirectPort="8443"&amp;nbsp;protocol="AJP/1.3"&amp;nbsp;/&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;打开tomcat2\conf\server.xml&lt;/p&gt;&lt;p class="p0"&gt;将Server&amp;nbsp;port&amp;nbsp;改为12005&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;Server&amp;nbsp;port="12005"&amp;nbsp;shutdown="SHUTDOWN"&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;将Define&amp;nbsp;Connector&amp;nbsp;port改为12080&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;Connector&amp;nbsp;port="12080"&amp;nbsp;maxHttpHeaderSize="8192"&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;将&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;AJP13&amp;nbsp;&lt;/span&gt;Connector&amp;nbsp;port改为12009&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;Connector&amp;nbsp;port="12009"&amp;nbsp;enableLookups="false"&amp;nbsp;redirectPort="8443"&amp;nbsp;protocol="AJP/1.3"&amp;nbsp;/&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;好了，现在建立一个测试程序&lt;/p&gt;&lt;p class="p0"&gt;分别在两个&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的&lt;/span&gt;webapps中建立test目录，并新建test.jsp文件，内容如下：&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;%&lt;/p&gt;&lt;p class="p0"&gt;System.out.println("===========");&lt;/p&gt;&lt;p class="p0"&gt;%&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;启动&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;apache,&amp;nbsp;tomcat1,&amp;nbsp;tomcat2&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;访问&lt;a href="http://localhost:8080/test/test.jsp"&gt;http://localhost:8080/test/test.jsp&lt;/a&gt;&amp;nbsp;（或者&amp;nbsp;http://localhost/test/test.jsp）不断刷新页面，可以在两个&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的控制台中看到，交替输出&lt;/span&gt;"===========",&amp;nbsp;&lt;span style="font-family: 宋体;" face="宋体"&gt;这样就实现了负载均衡。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;三、&amp;nbsp;集群配置&lt;/p&gt;&lt;p class="p0"&gt;集群除了负载均衡，另一个主要功能是Session&amp;nbsp;Replication。&lt;/p&gt;&lt;p class="p0"&gt;打开tomcat1\conf\&amp;nbsp;server.xml将&amp;lt;Cluster&amp;gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;部分的注释去掉。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;再打开tomcat2\conf\&amp;nbsp;server.xml将&amp;lt;Cluster&amp;gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;部分的注释也去掉，并将&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;&amp;lt;&lt;/span&gt;Cluster&amp;gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;中&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;&amp;lt;&lt;/span&gt;Receiver&amp;gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的&lt;/span&gt;tcpListenPort的值改为4002。以避免与&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Tomcat1&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;冲突。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;添加一个新的测试程序&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;test2.jsp&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;%@&amp;nbsp;page&amp;nbsp;contentType="text/html;&amp;nbsp;charset=GBK"&amp;nbsp;%&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;%@&amp;nbsp;page&amp;nbsp;import="java.util.*"&amp;nbsp;%&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Cluster&amp;nbsp;App&amp;nbsp;Test&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;body&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;Server&amp;nbsp;Info:&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;%&lt;/p&gt;&lt;p class="p0"&gt;out.println(request.getLocalAddr()&amp;nbsp;+&amp;nbsp;"&amp;nbsp;:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;request.getLocalPort()+"&amp;lt;br&amp;gt;");%&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;%&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;out.println("&amp;lt;br&amp;gt;&amp;nbsp;ID&amp;nbsp;"&amp;nbsp;+&amp;nbsp;session.getId()+"&amp;lt;br&amp;gt;");&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;//&amp;nbsp;&lt;span style="font-family: 宋体;" face="宋体"&gt;如果有新的&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Session&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;属性设置&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;String&amp;nbsp;dataName&amp;nbsp;=&amp;nbsp;request.getParameter("dataName");&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(dataName&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;dataName.length()&amp;nbsp;&amp;gt;&amp;nbsp;0)&amp;nbsp;{&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;dataValue&amp;nbsp;=&amp;nbsp;request.getParameter("dataValue");&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.setAttribute(dataName,&amp;nbsp;dataValue);&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;}&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;out.println("&amp;lt;b&amp;gt;Session&amp;nbsp;&lt;span style="font-family: 宋体;" face="宋体"&gt;列表&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;");&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;System.out.println("============================");&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;Enumeration&amp;nbsp;e&amp;nbsp;=&amp;nbsp;session.getAttributeNames();&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(e.hasMoreElements())&amp;nbsp;{&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;name&amp;nbsp;=&amp;nbsp;(String)e.nextElement();&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;value&amp;nbsp;=&amp;nbsp;session.getAttribute(name).toString();&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out.println(&amp;nbsp;name&amp;nbsp;+&amp;nbsp;"&amp;nbsp;=&amp;nbsp;"&amp;nbsp;+&amp;nbsp;value+"&amp;lt;br&amp;gt;");&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;nbsp;name&amp;nbsp;+&amp;nbsp;"&amp;nbsp;=&amp;nbsp;"&amp;nbsp;+&amp;nbsp;value);&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/p&gt;&lt;p class="p0"&gt;%&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;lt;form&amp;nbsp;action="test2.jsp"&amp;nbsp;method="POST"&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;名称&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;:&amp;lt;input&amp;nbsp;type=text&amp;nbsp;size=20&amp;nbsp;name="dataName"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;br&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;值&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;:&amp;lt;input&amp;nbsp;type=text&amp;nbsp;size=20&amp;nbsp;name="dataValue"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;br&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;input&amp;nbsp;type=submit&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/form&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;/body&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;/html&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;分别在&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;2&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;个&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的&lt;/span&gt;webapps\test中新建WEB-INF目录，在WEB-INF中添加web.xml内容如下：&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;web-app&amp;nbsp;xmlns="http://java.sun.com/xml/ns/j2ee"&amp;nbsp;xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&amp;nbsp;xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee&amp;nbsp;http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"&amp;nbsp;version="2.4"&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;display-name&amp;gt;TomcatDemo&amp;lt;/display-name&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;distributable/&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;/web-app&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;主要是添加&amp;lt;distributable/&amp;gt;，distributable&lt;span style="font-family: 宋体;" face="宋体"&gt;元素&lt;/span&gt;用来告诉&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;servlet&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;容器，&lt;/span&gt;程序将部署在分布式&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Web&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;容器&lt;/span&gt;中。&lt;/p&gt;&lt;p class="p0"&gt;重新启动&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat1&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;和&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat2.&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;访问&lt;/span&gt;&lt;a href="http://localhost:8080/test/test2.jsp"&gt;http://localhost:8080/test/test2.jsp&lt;/a&gt;&amp;nbsp;（或&lt;a href="http://localhost/test/test2.jsp"&gt;http://localhost/test/test2.jsp&lt;/a&gt;）&lt;/p&gt;&lt;p class="p0"&gt;随意添加&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;key-value,&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;可以看到两个&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;交替显示&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;session&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;中的值，各个&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;session&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;是同步的。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;再来修改tomcat1\conf\server.xml，找到&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;Engine&amp;nbsp;name="Catalina"&amp;nbsp;defaultHost="localhost"&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;为其添加jvmRoute属性，值为&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;apache&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;conf\&lt;/span&gt;workers.properties中配置的&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;名字。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;Engine&amp;nbsp;name="Catalina"&amp;nbsp;defaultHost="localhost"&amp;nbsp;jvmRoute="tomcat1"&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;同样修改tomcat2\conf\server.xml的相同部分&lt;/p&gt;&lt;p class="p0"&gt;&amp;lt;Engine&amp;nbsp;name="Catalina"&amp;nbsp;defaultHost="localhost"&amp;nbsp;jvmRoute="tomcat2"&amp;gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;jvmRoute&lt;span style="font-family: 宋体;" face="宋体"&gt;是&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;路由标示，由此区分两台&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;主机。一次会话，就有一个&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;sessionID&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;，这个&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;sessionID&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;后面会跟上&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;jvmRoute&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;设置的值，这样一次会话，就只会让一个&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;处理。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;重新启动&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat1,&amp;nbsp;tomcat2&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;访问&lt;a href="http://localhost:8080/test/test2.jsp"&gt;http://localhost:8080/test/test2.jsp&lt;/a&gt;&amp;nbsp;可以看到session.getId()的值在原&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;session&amp;nbsp;id&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;后面多了&lt;/span&gt;jvmRoute的值。&lt;/p&gt;&lt;p class="p0"&gt;ID&amp;nbsp;46A5843FF4A1E0A84338225AC02F6430.tomcat1&lt;/p&gt;&lt;p class="p0"&gt;随意添加&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;key-value&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;，可以看到&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;session&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;信息只在&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat1&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;中输出。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;再打开一个浏览器，并访问&lt;a href="http://localhost:8080/test/test2.jsp"&gt;http://localhost:8080/test/test2.jsp&lt;/a&gt;&amp;nbsp;其&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;session&amp;nbsp;id&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;可能变为&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;ID&amp;nbsp;11478E5BE5FE388E4845205B4133A30F.tomcat2&lt;/p&gt;&lt;p class="p0"&gt;其值也只会在&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat2&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;中输出。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;现在把&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat1&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;关闭，再次刷新访问&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat1&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的那个浏览器，可以看到&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;session&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;信息输出到了&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;tomcat2&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;的控制台中，并且&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;session&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;信息仍然保留着。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;附件&lt;/p&gt;&lt;p class="p0"&gt;Apache与Tomcat集群配置整个压缩包下载：&lt;a target="_blank" href="http://files.cnblogs.com/obullxl/Tomcat%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE.rar"&gt;Apache+Tomcat集群配置&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;参考文章&lt;/p&gt;&lt;p class="p0"&gt;&lt;a href="http://hi.baidu.com/luodaijun/blog/item/5bbe4cfb5ffef864034f56a1.html"&gt;http://hi.baidu.com/luodaijun/blog/item/5bbe4cfb5ffef864034f56a1.html&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;&lt;a href="http://www-128.ibm.com/developerworks/cn/java/l-jetspeed/"&gt;http://www-128.ibm.com/developerworks/cn/java/l-jetspeed/&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;&lt;a href="http://tomcat.apache.org/tomcat-5.0-doc/balancer-howto.html"&gt;http://tomcat.apache.org/tomcat-5.0-doc/balancer-howto.html&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;&lt;a href="http://tomcat.apache.org/tomcat-5.0-doc/cluster-howto.html"&gt;http://tomcat.apache.org/tomcat-5.0-doc/cluster-howto.html&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;&lt;a href="http://hi.baidu.com/abocai/blog/item/c18314f4d8e4a1ef7609d70f.html"&gt;http://hi.baidu.com/abocai/blog/item/c18314f4d8e4a1ef7609d70f.html&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;&lt;a href="http://hi.baidu.com/injava/blog/item/c8df882f136f21391e30896d.html"&gt;http://hi.baidu.com/injava/blog/item/c8df882f136f21391e30896d.html&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;&lt;p class="p0"&gt;另外推荐一篇文章《Remotely&amp;nbsp;monitor&amp;nbsp;Tomcat&amp;nbsp;clusters&amp;nbsp;using&amp;nbsp;MC4J》，使用&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;JMX&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;技术监测&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;集群。&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;中文名《用&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;MC4J&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;远程监测&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;集群&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;-JMX&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;技术助力&lt;/span&gt;&lt;span style="font-family: Times New Roman;" face="Times New Roman"&gt;Tomcat&lt;/span&gt;&lt;span style="font-family: 宋体;" face="宋体"&gt;》&lt;/span&gt;&lt;/p&gt;&lt;p class="p0"&gt;英文地址&amp;nbsp;&lt;a href="http://www.javaworld.com/javaworld/jw-08-2005/jw-0801-jmx.html"&gt;http://www.javaworld.com/javaworld/jw-08-2005/jw-0801-jmx.html&lt;/a&gt;&lt;/p&gt;&lt;p class="p0"&gt;中文地址&amp;nbsp;&lt;a href="http://www.matrix.org.cn/resource/article/2005-09-01/Tomcat_MC4J_43706.html"&gt;http://www.matrix.org.cn/resource/article/2005-09-01/Tomcat_MC4J_43706.html&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;img src="http://counter.cnblogs.com/blog/rss/2076280" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2011/06/09/apache-tomcat-cluster-config.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2011/06/09/apache-tomcat-cluster-config.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/obullxl/archive/2011/06/04/android-src-code-eclipse-binding.html</id><title type="text">Android源码下载并在Eclipse中方便查看 - 老牛啊</title><summary type="text">在Windows下，通过SDK Manager.exe更新下载的Android，是不带源码的，我们开发开发起来不是很方便；其实Android的源代码是可以下载的，其源代码入在http://android.git.kernel.org/上，下载需要安装Git，下载方法如下：1、安装Git下载http://code.google.com/p/msysgit/并安装MSysGit，安装很简单，一路默认设置即可；安装成功后，把bin目录加入到path环境变量中；2、下载源代码新建存放源代码的目录，比如e:/Code/AndroidSDK；CMD到该目录下，运行命令：git clone git://an</summary><published>2011-06-04T05:22:00Z</published><updated>2011-06-04T05:22:00Z</updated><author><name>老牛啊</name><uri>http://www.cnblogs.com/obullxl/</uri></author><link rel="alternate" href="http://www.cnblogs.com/obullxl/archive/2011/06/04/android-src-code-eclipse-binding.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/obullxl/archive/2011/06/04/android-src-code-eclipse-binding.html" /><content type="html">&lt;div style="font-family: courier new,courier; font-size: 14px;"&gt;&lt;p&gt;在Windows下，通过SDK Manager.exe更新下载的Android，是不带源码的，我们开发开发起来不是很方便；&lt;/p&gt;&lt;p&gt;其实Android的源代码是可以下载的，其源代码入在http://android.git.kernel.org/上，下载需要安装Git，下载方法如下：&lt;/p&gt;&lt;p&gt;1、安装Git&lt;br /&gt;下载http://code.google.com/p/msysgit/并安装MSysGit，安装很简单，一路默认设置即可；&lt;br /&gt;安装成功后，把bin目录加入到path环境变量中；&lt;/p&gt;&lt;p&gt;2、下载源代码&lt;br /&gt;新建存放源代码的目录，比如e:/Code/AndroidSDK；&lt;br /&gt;CMD到该目录下，运行命令：git clone git://android.git.kernel.org/platform/frameworks/base.git，这样会建立一个新的目录base，里面有目录结构core/java，这个就是Android.jar的源代码；&lt;/p&gt;&lt;p&gt;3、把源码与Android.jar绑定&lt;br /&gt;最直观的方法就是在Eclipse中，右键Android.jar文件，等的属性，绑定base/core/java文件即可，但是这样做，每新建一个Android工程，都要这样做一遍，不方便；&lt;br /&gt;第二种方法比较省事，做一遍即可。在AndroidSDK的安装目录下的platforms/android-12下新建sources目录，把core/java的内容复制过去，然后重启Eclipse，就可以了。这样做不好的地方就是源代码不能及时的更新；&lt;/p&gt;安装只是学习Android的一个开始，真正的难的，就是坚持学习了，加油~~~~&lt;/div&gt;&lt;img src="http://counter.cnblogs.com/blog/rss/2072587" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/obullxl/archive/2011/06/04/android-src-code-eclipse-binding.html" target="_blank"&gt;http://www.cnblogs.com/obullxl/archive/2011/06/04/android-src-code-eclipse-binding.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry></feed>